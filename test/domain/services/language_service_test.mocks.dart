// Mocks generated by Mockito 5.3.0 from annotations
// in speakyfox/test/domain/services/language_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:speakyfox/app/connectivity_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i2.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isWIFI =>
      (super.noSuchMethod(Invocation.getter(#isWIFI), returnValue: false)
          as bool);
  @override
  bool get isMobile =>
      (super.noSuchMethod(Invocation.getter(#isMobile), returnValue: false)
          as bool);
  @override
  bool get isNone =>
      (super.noSuchMethod(Invocation.getter(#isNone), returnValue: false)
          as bool);
  @override
  _i3.Future<bool> hasConnection() =>
      (super.noSuchMethod(Invocation.method(#hasConnection, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
}
